FORMAT: 1A
HOST: https://hepaimusic.com/api
CURRENT VERSION: v2

# 合拍 API

## 指定 API 版本
通过 Http Header `Accept: application/vnd.hepaimusic.v2`

## Token
通过 Http Header `X-USER-ACCESS-TOKEN`

## 分页
多页 (列表) 时分页参数为： 页码（默认为 1）：`page`，每页记录数量（默认为 10）：`per`

建议对分页参数显式传值，以免后期默认值可能会修改。

# Group Project

Collaborate with other users in making music

## Project [/projects/{projectId}]

Existing project

+ Model (application/json)

    + Body

            {
                id: "1",
                own: true,
                name: "测试",
                description: "测试",
                description_html: "测试",
                current_audio: {
                    id: "audio_id",
                    name: "xxx",
                    url: "http://xxx.xx",
                    source_url: "http://xxx.xxxx",
                    current_version: true
                    user: {
                        id: "audio_user_id"
                        name: "name",
                        nickname: "nickname",
                        avatars: {
                            "24x24": "",
                            "50x50": "",
                            "80x80": "",
                            "150x150": "",
                            "240x240": "",
                            "origin": ""
                        }
                    }
                },
                public: true,
                created_at: "2013-12-12T18:00:52+08:00",
                updated_at: "2013-12-12T18:00:52+08:00",
                user: {},
                members: []
            }

### Get a Project [GET]

Get existing project

+ Response 200

    [Project][]

### Update a Project [PUT]

Update existing project

+ Request (application)

        {
            name: "测试",
            description: "测试",
            public: true,
            member_ids: ['ID']
        }

+ Response 200

    [Project][]

### Delete a Project [DELETE]

Delete existing project

+ Response 204

## Project List [/projects]

List own projects

+ Model (application/json)

    + Body

            [{
                id: "529d526282ae474d3100000c",
                name: "test",
                description: "",
                description_html: "",
                public: true,
                created_at: "2013-12-03T11:39:14+08:00",
                updated_at: "2013-12-03T11:39:14+08:00",
                user: {},
                members: []

            }, {
                id: "529d526282ae474d3100900c",
                name: "test2",
                description: "",
                description_html: "",
                public: true,
                created_at: "2013-12-03T11:39:14+08:00",
                updated_at: "2013-12-03T11:39:14+08:00",
                user: {},
                members: []
            }]

### List Projects [GET]

List of public projects

+ Parameters

    + per = `10` (optional, number) ... number of results per page

    + page = `1` (optional, number) ... current page number

+ Response 200 (application/json)

    [Project List][]

### Creating Project [POST]

Create new project

+ Request (application/json)

        {
            name: "测试",
            description: "测试",
            public: true,
            member_ids: ['ID']
        }

+ Response 201 (application/json)

    [Project][]

### GET /user/projects

Get list of own projects

+ Parameters

    + type = `all` (optional, string) ... Type of projects to list. Possible values are `all`, `owner`, `member`, `public`, `private`

    + per = `10` (optional, number) ... number of results per page

    + page = `1` (optional, number) ... current page number

+ Response 200

    [Project List][]

