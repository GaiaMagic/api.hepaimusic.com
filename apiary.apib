FORMAT: 1A
HOST: https://hepaimusic.com/api
CURRENT VERSION: v2

# 合拍 API

## 指定 API 版本
通过 Http Header `Accept: application/vnd.hepaimusic.v2`

## Token
通过 Http Header `X-USER-ACCESS-TOKEN`

## 分页
多页 (列表) 时分页参数为： 页码（默认为 1）：`page`，每页记录数量（默认为 10）：`per`

建议对分页参数显式传值，以免后期默认值可能会修改。

# Group Project

Collaborate with other users in making music

## Project [/projects/{project_id}]

Existing project

+ Model (application/json)

    + Body

            {
                id: "1",
                own: true,
                name: "测试",
                description: "测试",
                description_html: "测试",
                current_audio: {
                    id: "audio_id",
                    name: "xxx",
                    url: "http://xxx.xx",
                    source_url: "http://xxx.xxxx",
                    current_version: true
                    user: {
                        id: "audio_user_id"
                        name: "name",
                        nickname: "nickname",
                        avatars: {
                            "24x24": "",
                            "50x50": "",
                            "80x80": "",
                            "150x150": "",
                            "240x240": "",
                            "origin": ""
                        }
                    }
                },
                public: true,
                created_at: "2013-12-12T18:00:52+08:00",
                updated_at: "2013-12-12T18:00:52+08:00",
                user: {},
                members: []
            }

### Get a Project [GET]

Get existing project

+ Response 200

    [Project][]

### Update a Project [PUT]

Update existing project

+ Request (application/json)

        {
            name: "测试",
            description: "测试",
            public: true,
            member_ids: ['ID']
        }

+ Response 200

    [Project][]

### Delete a Project [DELETE]

Delete existing project

+ Response 204

## Project List [/projects]

List own projects

+ Model (application/json)

    + Body

            [{
                id: "529d526282ae474d3100000c",
                name: "test",
                description: "",
                description_html: "",
                public: true,
                created_at: "2013-12-03T11:39:14+08:00",
                updated_at: "2013-12-03T11:39:14+08:00",
                user: {},
                members: []

            }, {
                id: "529d526282ae474d3100900c",
                name: "test2",
                description: "",
                description_html: "",
                public: true,
                created_at: "2013-12-03T11:39:14+08:00",
                updated_at: "2013-12-03T11:39:14+08:00",
                user: {},
                members: []
            }]

### List Projects [GET]

List of public projects

+ Parameters

    + per = `10` (optional, number) ... number of results per page

    + page = `1` (optional, number) ... current page number

+ Response 200 (application/json)

    [Project List][]

### Creating Project [POST]

Create new project

+ Request (application/json)

        {
            name: "测试",
            description: "测试",
            public: true,
            member_ids: ['ID']
        }

+ Response 201 (application/json)

    [Project][]

### GET /user/projects

Get your projects

+ Parameters

    + type = `all` (optional, string) ... Type of projects to list. Possible values are `all`, `owner`, `member`, `public`, `private`

    + per = `10` (optional, number) ... number of results per page

    + page = `1` (optional, number) ... current page number

+ Response 200

    [Project List][]

### GET /users/{user}/projects

Get user projects

+ Parameters

    + type = `owner` (optional, string) ... Type of projects to list. Possible values are `all`, `owner`, `member`

    + per = `10` (optional, number) ... number of results per page

    + page = `1` (optional, number) ... current page number

+ Response 200

    [Project List][]

## Project Memeber [/projects/{project_id}/members/{?member_id}]

Project members

### Add member [POST]

添加项目成员

只有 project-owner 才能添加

+ Request (application/json)

        {
          member_id: 'user_id'
        }

+ Response 204

### Remove member [DELETE]

退出项目

用户自己可以退出

project-owner可以退出任意成员

+ Response 204

## Project Audio Single [/projects/{project_id}/current_audio]

Project Audio Single

+ Model (application/json)

    + Body

            {
                id: "1",
                name: "name",
                url: "audio url",
                current_version: true,
                with_source_url: true,
                is_released: true,
                // is_released 为 true 时才会返回 music 字段
                music: {
                    id: 123
                },
                user: {
                    id: "2"
                    name: "user name",
                    nickname: "user nickname",
                    avatars: {
                        "24x24": "",
                        "50x50": "",
                        "80x80": "",
                        "150x150": "",
                        "240x240": "",
                        "origin": ""
                    }
                }
            }

### Get current audio [GET]

音频附件最新版本

+ Response 200

    [Project Audio Single][]

### Change current audio [PUT]

修改音频附件最新版本

+ Request (application/json)

    {
      audio_id: 'audio_id'
    }

+ Response 200

    [Project Audio Single][]

### GET /projects/{project_id}/audio/{audio_id}/source_url

+ Response 200

    { url: 'audio_source_url' }

### DELETE /projects/{project_id}/audio/{audio_id}

删除音频附件

注意：只要是项目中的人都可以删除该项目的音频附件

+ Response 204

## Project Audio List [/projects/{project_id}/audio]

Project Audio List

+ Model (application/json)

    + Body

            [
                {
                    id: "1",
                    name: "name",
                    url: "audio url",
                    source_url: "audio source url",
                    current_version: true
                    user: {
                        id: "2"
                        name: "user name",
                        nickname: "user nickname",
                        avatars: {
                            "24x24": "",
                            "50x50": "",
                            "80x80": "",
                            "150x150": "",
                            "240x240": "",
                            "origin": ""
                        }
                    }
                }
            ]

### Get project audio list [GET]

音频附件列表

+ Response 200

    [Project Audio List][]

### Create project audio [POST]

上传音频附件

+ Request (application/json)

    {
        name: "name",
        url: "audio url",
        source_url: "audio source url",
        project_id: "projece_id"
    }

+ Response 201

    [Project Audio Single][]

# Group Comment

## Comment [/{music, posts, projects}/:commentable_id/comments]

List comments

+ Model (application/json)

    + Body

        {
            "id"           : "51343ce78f0e7b78d6000002",
            "content"      : '正文',
            "content_html" : 'html转义后的正文',          // 只会包含<a><br>标签
            "own"          : false,                       // 是否为登录用户发表的评论
            "is_reply"     : false,
            "created_at"   : "2013-03-04T14:19:19+08:00",
            "actor"        : {
                // 此为发布此评论的用户
                // 数据请参考「根据 ID 获取用户信息」
            },
            reply_to: {
              // 如果请求参数中with_reply_to为true时会附上此数据
            }
        }

### Creating Comment [POST]

Create new comment

+ Request (application/json)

        {
            content: 'the content of your comment',
            reply_to: 'comment_id, 如果是直接评论就不必加上这个参数',
            with_reply_to: false // 是否同时附上此评论所回复的评论
        }

+ Response 201 (application/json)

    [Comment][]
